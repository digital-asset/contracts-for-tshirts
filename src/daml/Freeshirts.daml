-- Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0


module Freeshirts where

data ShirtChoice = ZuriHacShirtPeach | ZuriHacShirtBlack | ZuriHacShirtTeal | DAMLShirt deriving (Eq, Show)
data ShirtSize = S | M | L | XL | XXL deriving (Eq, Show)

data OrderData = OrderData with shirtChoice : ShirtChoice, shirtSize : ShirtSize, 
                                  firstname: Text, lastname : Text, 
                                  address : Text, 
                                  zip : Text, city : Text, 
                                  country : Text, 
                                  email : Text deriving (Eq, Show)

-- If you give out a limited quantity of free shirts, you need some legal prose
-- in case there are some overly eager participants. As ZuriHac and Digital Asset Switerzland GmbH
-- are Swiss companies, we'll do this here in German.
-- If you can't understand German, please use some online translation service.
-- In short: you can't sue us to get a shirt and we won't use your data in any other way than dispatching
-- a shirt (in the case you win).
participationAgreement = " \ 
   \ Die Teilnahme am Wettbewerb ist kostenlos. Es besteht keine Kaufverpflichtung. \
   \ Teilnahmeberechtigt sind natürliche Personen. Die Teilnahme setzt voraus, dass der Teilnehmer \
   \ seine Teilname über https://zurihac.canton.global als TShirtOrder Contract anmeldet. \
   \ Der Teilnehmer akzeptiert die für Digital Asset GmbH existierende \
   \ Datenschutzerklärung: https://www.digitalasset.com/privacy-policy-1 \
   \ Die erhobenen Teilnahmedaten werden ausschliesslich zur Versendung der T-Shirts verwendet.  \
   \ Die Daten werden von der Digital Asset Switzerland GmbH an den offiziellen ZuriHac  \
   \ Shop https://shop.zfoh.ch/ zum Versand der T-Shirts weitergeleitet und danach vernichtet. \
   \ Mitarbeiter der Firma DigitalAsset (weltweit) sind von der Teilnahme ausgeschlossen. \
   \ Der Rechtsweg ist ausgeschlossen. Der Gewinn kann nicht in bar abgeloest werden. Pro  \
   \ Teilnehmer ist nur ein Gewinn pro Gewinnspiel möglich. Manipulationen von Gewinnspielen \ 
   \ (auch der blosse Versuch) wird zur Anzeige gebracht. Die Digital Asset Switerzland GmbH  \
   \ ist berechtigt, Änderungen am Gewinn vorzunehmen. Der Rechtsweg ist ausgeschlossen. \
   \ Die Gewinner werden von Digital Asset Schweiz im Sinne des Wettbewerbes bestimmt.  \
   \ (Die früheste und am besten koordinierte zeitgleiche Einreichung von Teilnahmen.)  \
   \ Die Gewinner werden mittels Kontrakt auf dem Ledger über ihren Gewinn benachrichtigt. \
   \ In bestimmten Fällen kann die Gewinnbenachrichtigung auch direkt über die Zustellung des Gewinns erfolgen. \ 
   \ Die durch den Teilnehmer bereitgestellten Daten werden für den Zeitraum der Durchführung des Gewinnspiels \
   \ mittels einer Datenbank verarbeitet. Über das Gewinnspiel wird kein Schriftverkehr geführt."


template TShirtOrder 
  with 
    submitter : Party
    shop : Party 
    order : OrderData 
  where 
    signatory submitter 

    agreement participationAgreement

    controller shop can 
      Confirm: ContractId PendingTShirtOrder 
        do
          submissionTime <- getTime
          create PendingTShirtOrder with submitter, shop, order, submissionTime

template PendingTShirtOrder
  with 
    submitter : Party 
    shop : Party 
    order : OrderData 
    submissionTime : Time
    -- TODO: disclose current rank so people know if they currently being selected as winners or not
  where 
    signatory shop
    observer submitter

    controller shop can 
      YouWin : ContractId Winner 
        do 
          create Winner with submitter, shop, order 

      BadLuck : ContractId Sorry 
        do 
          create Sorry with submitter, shop, order 

template Sorry 
  with 
    submitter : Party
    shop : Party
    order : OrderData 
  where 
    signatory shop 

    agreement "Sorry, but someone else was more lucky than you. Thank you very much for your participation."
    
    controller submitter can 
      AckSorry : ()
        do
          return ()

template Winner 
  with 
    submitter : Party 
    shop : Party 
    order : OrderData 
  where 
    signatory shop 

    agreement "Winner, winner, chicken dinner! You have won a T-shirt! Thank you for participating!"

    controller submitter can 
      AckWin : ()
        do
          return ()
        

testWorkflows = scenario 
  do
     alice <- getParty "Alice"
     bob <- getParty "Bob"
     shop <- getParty "Shop"

     aliceOrder <- submit alice do 
        let order = OrderData with shirtChoice = DAMLShirt, shirtSize = L, firstname = "Alice",
                                     lastname = "Wonderland", address = "Humpty Dumpty Street 12", 
                                     zip = "1234", city = "Rapperswil", country = "CH", email = "alice@wonderland.ch"
        create TShirtOrder with submitter = alice, shop = shop, order 
     bobOrder <- submit bob do 
        let order = OrderData with shirtChoice = DAMLShirt, shirtSize = L, firstname = "Bob",
                                     lastname = "Sponge", address = "No Idea 44", 
                                     zip = "4321", city = "Rapperswil", country = "CH", email = "bob@sponge.com"
        create TShirtOrder with submitter = bob, shop = shop, order 
  

     (win, lose) <- submit shop do 
        alicePending <- exercise aliceOrder Confirm 
        win <- exercise alicePending YouWin 
        bobPending <- exercise bobOrder Confirm 
        lose <- exercise bobPending BadLuck 
        return (win, lose)
        
     
        

     return ()



     


